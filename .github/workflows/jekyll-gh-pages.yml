name: Deploy Security Runbooks to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Create Jekyll structure
        run: |
          # Create necessary directories
          mkdir -p _runbooks _layouts _includes assets/css

          # Create runbook layout
          cat > _layouts/runbook.html << 'EOL'
          ---
          layout: default
          ---
          <article class="runbook">
            <header class="page-header">
              <h1>{{ page.title }}</h1>
            </header>
            
            <div class="runbook-content">
              {{ content }}
            </div>
            
            <footer class="page-footer">
              <hr>
              <p class="text-small">
                <a href="{{ site.github.repository_url }}/edit/main/{{ page.path }}">Edit this page on GitHub</a>
              </p>
            </footer>
          </article>
          EOL

          # Add custom styles
          cat > assets/css/style.scss << 'EOL'
          ---
          ---
          
          @import "{{ site.theme }}";
          
          .runbook {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
          }
          
          .runbook h1 {
            border-bottom: 1px solid #eaecef;
            padding-bottom: 0.3em;
          }
          
          .runbook pre {
            background-color: #f6f8fa;
            border-radius: 3px;
            padding: 16px;
          }
          EOL

          # Process runbook files
          for file in *.md runbooks/*.md; do
            if [ -f "$file" ] && [ "$(basename "$file")" != "README.md" ]; then
              # Convert filename to lowercase and clean it
              newname=$(basename "$file" | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g' | sed 's/runbook\.md$/md/' | sed 's/[)(]//g')
              
              # Add front matter if it doesn't exist
              if ! grep -q "^---" "$file"; then
                title=$(basename "$file" .md | sed 's/RunBook//' | sed 's/-/ /g' | sed 's/\b\(.\)/\u\1/g')
                temp_file=$(mktemp)
                echo "---" > "$temp_file"
                echo "layout: runbook" >> "$temp_file"
                echo "title: \"$title\"" >> "$temp_file"
                echo "nav_order: 2" >> "$temp_file"
                echo "---" >> "$temp_file"
                cat "$file" >> "$temp_file"
                mv "$temp_file" "_runbooks/$newname"
              else
                cp "$file" "_runbooks/$newname"
              fi
            fi
          done

          # Create index page
          cat > index.md << 'EOL'
          ---
          layout: default
          title: Contrast Security Attack Detection Rules Runbooks
          nav_order: 1
          ---

          # Attack Detection Rules (ADR) Runbooks

          Welcome to Contrast Security's Attack Detection Rules (ADR) Runbooks. These guides provide detailed procedures for understanding and responding to various security vulnerabilities detected by Contrast Security.

          ## Available Runbooks

          {% assign sorted_runbooks = site.runbooks | sort: "title" %}
          {% for runbook in sorted_runbooks %}
          * [{{ runbook.title }}]({{ runbook.url | relative_url }})
          {% endfor %}

          ## Contributing

          These runbooks are open source. To contribute:

          1. Fork the [repository](https://github.com/Contrast-Security-OSS/adr-runbooks)
          2. Make your changes
          3. Submit a pull request
          EOL

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
